openapi: 3.0.3
info:
  title: Django DRF Ecommerce Project
  version: 0.0.0
paths:
  /api/brand/:
    get:
      operationId: brand_list
      tags:
      - brand
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: brand_create
      tags:
      - brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/brand/{id}/:
    get:
      operationId: brand_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brand
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: brand_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: brand_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: brand_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brand
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/category/:
    get:
      operationId: category_list
      tags:
      - category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: category_create
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/category/{id}/:
    get:
      operationId: category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/product/:
    get:
      operationId: product_list
      tags:
      - product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: product_create
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/product/{id}/:
    get:
      operationId: product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: product_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: product_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/productImage/:
    get:
      operationId: productImage_list
      tags:
      - productImage
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
          description: ''
    post:
      operationId: productImage_create
      tags:
      - productImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/productImage/{id}/:
    get:
      operationId: productImage_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - productImage
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: productImage_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - productImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: productImage_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - productImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: productImage_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - productImage
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/productLine/:
    get:
      operationId: productLine_list
      tags:
      - productLine
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductLine'
          description: ''
    post:
      operationId: productLine_create
      tags:
      - productLine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductLine'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLine'
          description: ''
  /api/productLine/{id}/:
    get:
      operationId: productLine_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product line.
        required: true
      tags:
      - productLine
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLine'
          description: ''
    put:
      operationId: productLine_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product line.
        required: true
      tags:
      - productLine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductLine'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLine'
          description: ''
    patch:
      operationId: productLine_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product line.
        required: true
      tags:
      - productLine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductLine'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLine'
          description: ''
    delete:
      operationId: productLine_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product line.
        required: true
      tags:
      - productLine
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        parent:
          type: string
          readOnly: true
      required:
      - id
      - name
      - parent
    PatchedBrand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        parent:
          type: string
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          $ref: '#/components/schemas/Brand'
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_digital:
          type: boolean
    PatchedProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_line:
          $ref: '#/components/schemas/ProductLine'
        name:
          type: string
          maxLength: 100
        alternate_text:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          nullable: true
          description: Upload a Picture of Product
    PatchedProductLine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          $ref: '#/components/schemas/Product'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_keeping_unit:
          type: string
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          $ref: '#/components/schemas/Brand'
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_digital:
          type: boolean
      required:
      - brand
      - category
      - id
      - name
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_line:
          $ref: '#/components/schemas/ProductLine'
        name:
          type: string
          maxLength: 100
        alternate_text:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          nullable: true
          description: Upload a Picture of Product
      required:
      - alternate_text
      - id
      - name
      - product_line
    ProductLine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          $ref: '#/components/schemas/Product'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_keeping_unit:
          type: string
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - price
      - product
      - stock_keeping_unit
      - stock_quantity
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
